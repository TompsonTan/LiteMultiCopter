

修改本文档请注意格式，开头和末尾加上*线，用以分隔不同内容


*******************************		#if defined的使用		************************************

		因为MWC不是只针对四轴设计的，而是兼顾了各种类型（例如3轴、6轴、X型、Y型、+型。。。），
	各种传感器（各种加速度、陀螺仪、GPS传感器、气压计），还有LCD液晶屏、LED等之类的，所以代码中用了大
	量的宏定义和预处理，你可以看到很多的 #define 和 #if defined、#if。

	************************************************
	#defined x 
		定义了宏 x
	#defined x 0
		定义了宏 x，为0，那么#if x和#endif之间的东西略过而不编译，若改为1则加入编译
	************************************************
	#if defined (x)
		...code...
	#endif

		如果定义了x这个宏，那么，编译器会编译中间的…code…否则直接忽视中间的…code…代码。
	另外 #if defined(x)也可以取反，也就用 #if !defined(x)。
	************************************************
	#if x
		...code...
	#endif
	
		如果定义了x这个宏，且x为真，那么，编译器会编译中间的…code…否则直接忽视中间的…code…代码
	************************************************
	
		而我们用到的传感器目前只有MPU6050（加速度、角速度共6轴），所以大部分代码对我们没用，
	例如GPS相关的可以直接删除：GPS.ino，tinygps.h这两个文件都不要，其它文件中有涉及到GPS的部分
	也删除，例如MultiWii_2_1.ino中的：
	#if GPS
      #if defined(I2C_GPS)
      static uint8_t GPSNavReset = 1;
      if (f.GPS_FIX && GPS_numSat >= 5 ) {
        if (!rcOptions[BOXGPSHOME] && !rcOptions[BOXGPSHOLD] )
          {    //Both boxes are unselected
            if (GPSNavReset == 0 ) { 
               GPSNavReset = 1; 
               GPS_I2C_command(I2C_GPS_COMMAND_STOP_NAV,0);
            }
          }  
        if (rcOptions[BOXGPSHOME]) {
         if (!f.GPS_HOME_MODE)  {
            f.GPS_HOME_MODE = 1;
            GPSNavReset = 0;
            GPS_I2C_command(I2C_GPS_COMMAND_START_NAV,0);        //waypoint zero
          }
        } else {
          f.GPS_HOME_MODE = 0;
        }
        if (rcOptions[BOXGPSHOLD]) {
          if (!f.GPS_HOLD_MODE & !f.GPS_HOME_MODE) {
            f.GPS_HOLD_MODE = 1;
            GPSNavReset = 0;
            GPS_I2C_command(I2C_GPS_COMMAND_POSHOLD,0);
          }
        } else {
          f.GPS_HOLD_MODE = 0;
        }
      }
      #endif 
      #if defined(GPS_SERIAL) || defined(TINY_GPS) || defined(GPS_FROM_OSD)
      if (f.GPS_FIX && GPS_numSat >= 5 ) {
        if (rcOptions[BOXGPSHOME]) {
          if (!f.GPS_HOME_MODE)  {
            f.GPS_HOME_MODE = 1;
            GPS_set_next_wp(&GPS_home[LAT],&GPS_home[LON]);
            nav_mode    = NAV_MODE_WP;
          }
        } else {
          f.GPS_HOME_MODE = 0;
        }
        if (rcOptions[BOXGPSHOLD]) {
          if (!f.GPS_HOLD_MODE) {
            f.GPS_HOLD_MODE = 1;
            GPS_hold[LAT] = GPS_coord[LAT];
            GPS_hold[LON] = GPS_coord[LON];
            GPS_set_next_wp(&GPS_hold[LAT],&GPS_hold[LON]);
            nav_mode = NAV_MODE_POSHOLD;
          }
        } else {
          f.GPS_HOLD_MODE = 0;
        }
      }
      #endif
    #endif
****************************************************************************************************



********************************      MWC源代码各个文件的作用      ************************************
def.h：
config.h：	配置文件，包括设置飞行器类型，使用的传感器等
MultiWii_2_1.ino：	主要文件，包含setup()和loop ()等必要的函数
Sensors.ino：	实现传感器数据读取
EEPROM.ino：	只读存储器，储存关于配置的一些东西？
LED.ino：	LED灯
Serial.ino：	串口通信，和PC端的MWC飞控调试软件有关
RX.ino：	和接收机参数有关
Output.ino：	包含电机控制的函数


可删除的：
Buzzer.ino：	蜂鸣器
LCD.ino：	LCD显示器
GPS.ino,tinygps.h：	GPS定位
IMU.ino：	Inertial measurement unit，惯性测量单元，这里指各种集成加速度、陀螺仪等的传感器，因为我们
			用MPU6050（GY-521），不在MWC的IMU板子列表而在independent sensors中，所以此文件可删
****************************************************************************************************